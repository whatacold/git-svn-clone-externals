#!/bin/bash

set -e

EXTERNAL_REPO_DIR=".git_externals"
EXCLUSIVE_EXTERNAL_FILE=".git_externals_exclude"

toplevel_directory="$(git rev-parse --show-cdup)"
[ -n "$toplevel_directory" ] && { echo "please run from the toplevel directory"; exit 1; }


function call()
{
    cmd="$@"
    echo "$cmd"
    eval "$cmd"
    return "$?"
}

function do_clone()
{
    test -d $EXTERNAL_REPO_DIR || return 1
    repo_base_url=`echo $remote_url|sed 's,\(.*\)\(/trunk.*\|/branch.*\|/tag.*\),\1,'`
    full_branch_name=`echo $remote_url|sed 's,\(.*\)\(/trunk.*\|/branch.*\|/tag.*\),\2,'|sed 's,^/,,'`
    if [[ $full_branch_name = $remote_url ]]; then
        full_branch_name=""
    fi
     (
        cd $EXTERNAL_REPO_DIR
        if [ -d "$local_directory" ]; then
            (
                cd "$local_directory"
                call git svn fetch --all
            )
        else
            tags="tags"
            branches="branches"
            branch_type=$(echo $full_branch_name|cut -f1 -d/)
            echo $tags|grep $branch_type >/dev/null 2>&1 && tags=$branch_type
            echo $branches|grep $branch_type >/dev/null 2>&1 && branches=$branch_type

            if [ "$repo_base_url" = "$remote_url" ]; then
                # URL does not contains any trunk, branches or tags part, so we dont need
                # additional options for git-svn
                call git svn clone "$revision" "$repo_base_url" "$local_directory"
            else
                call git svn clone "$revision" "$repo_base_url" -T trunk -b $branches -t $tags "$local_directory"
            fi

        fi
        (
            full_branch_name="$(echo ${full_branch_name}|sed 's,/$,,')"
            if [ -n "$full_branch_name" ]; then
                cd "$local_directory"
                call git reset --hard $full_branch_name
            fi
        )
    )
}

function do_link()
{
    local symbolic_dir="$1"
    local symbolic_base_dir="$(dirname $symbolic_dir)"
    (
        mkdir -p "$symbolic_base_dir"
        cd $symbolic_base_dir
        local toplevel_rel_path=$(git rev-parse --show-cdup)
        ln -sf ${local toplevel_rel_path}.git_externals/"$symbolic_dir"
    )
}

function do_excludes()
{
    local symbolic_dir="$1"
    local git_excludes_path=.git/info/exclude
    if ! grep -q '^.git_externals$' "$git_excludes_path"
    then
        echo $EXTERNAL_REPO_DIR >> "$git_excludes_path"
    fi

    if ! grep -q '^'"$symbolic_dir"'$' "$git_excludes_path"
    then
        echo "$symbolic_dir" >> "$git_excludes_path"
    fi
}

function is_excluded()
{
    local result=0
    if [ -f $EXCLUSIVE_EXTERNAL_FILE ] ; then
        matches=`grep -v "^#" $EXCLUSIVE_EXTERNAL_FILE|grep "^/$1$"|wc -l`
        if [ $matches -gt 0 ] ; then
            local result=1
        fi
    fi
    echo $result
    return
}

git svn show-externals | grep -vE '^$' | \
    sed 's/\(-r\)[ ]*\([0-9]\{1,\}\)/\1\2/' | \
    while read svn_externals
do

    number_fields="$(echo ${svn_externals}|awk '{print NF}')"
    case $number_fields in
        2)
            if echo ${svn_externals} | grep -q '^#'; then
                prefix="$(echo ${svn_externals} | awk '{print $2}')"
            else
                local_directory=$(echo ${svn_externals} | awk '{print $2}' | sed "s,^/,${prefix},;s,^/,,")
                revision=""
                remote_url=$(echo ${svn_externals} | awk '{print $1}' | sed "s,^${prefix},,")
            fi
            ;;
        3)
            local_directory="$(echo ${svn_externals} | awk '{print $1}' | sed 's,^/,,')"
            revision=""$(echo ${svn_externals} | awk '{print $2}')
            remote_url="$(echo ${svn_externals} | awk '{print $3}')"
            ;;
        *)
            continue ;;
    esac

    check_excluded=$(is_excluded $local_directory)
    if [ $check_excluded -eq 0 ] ; then
        if [ -n "$USE_SSH" ]; then
            echo "Rewriting url to use SVN+SSH."
            shopt -s extglob
            remote_url="${remote_url/+(http|https)/svn+ssh}"
        fi

        [ -z "${remote_url}" ] && continue

        export local_directory revision remote_url

        echo "$local_directory -> $remote_url"

        dir=`dirname $local_directory`
        [ -d ".git_externals/$dir" ] || mkdir -p ".git_externals/$dir"

        do_clone "$revision" "$remote_url" "$local_directory" || exit
        do_link "$local_directory"
        do_excludes "$local_directory"
    fi

done